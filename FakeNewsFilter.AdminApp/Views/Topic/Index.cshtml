@using FakeNewsFilter.ViewModel.Common;
@using FakeNewsFilter.Data.Enums;
@using FakeNewsFilter.ViewModel.Catalog.TopicNews;

@model ApiResult<List<TopicInfoVM>>

@{
    ViewData["Title"] = "Topic List - Fake News Filter";
}

@section headerscripts{
    <link href="/bower_components/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
    <script src="https://momentjs.com/downloads/moment.js"></script>
}

@*Partial View hiển thị các thông báo*@
<partial name="_Toastr" />


@*Hiển thị tổng quan dữ liệu (số lượng chủ đề, số lượng tin tức có trong các chủ )*@
<div class="container-fluid">
    <div class="element-wrapper">
        <h6 class="element-header">
            SUMMARY INFOMATION
        </h6>
    </div>
    <div class="row">
        <div class="col-sm-6 col-xxxl-6">
            <a class="element-box el-tablo centered" href="#">
                <div class="label">
                    Number of Topic
                </div>
                <div class="value">
                    @Model.ResultObj.Count
                </div>
            </a>
        </div>

        <div class="col-sm-6 col-xxxl-6">
            <a class="element-box el-tablo centered" href="#">
                <div class="label">
                    Number of News
                </div>
                <div class="value">
                    @Model.ResultObj.Sum(c => c.NONews)
                </div>
            </a>
        </div>
    </div>
</div>

<div class="element-wrapper">
    @*Nút thêm mới 1 chủ đề*@
    <div class="element-actions">
        <a class="btn btn-success btn-sm text-white" data-target="#createTopic" data-toggle="modal"> <i class="os-icon os-icon-ui-22"></i> <span>Add New Topic</span></a>
    </div>
    <h6 class="element-header">
        LIST TOPIC
    </h6>
    @*Hiển thị bảng danh sách chủ đề*@
    <div class="table-responsive">
        <table id="list_topic" width="100%" class="table table-padded text-center">
            <thead class="row-actions">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Label</th>
                    <th>Lang</th>
                    <th>Number of News</th>
                    <th>SyncTime</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ResultObj)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.TopicId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Tag)
                        </td>
                        <td class="cell-with-media">
                            @switch (item.Label)
                            {
                                case "featured":
                                    {
                                        <div class="badge badge-success-inverted">@item.Label</div>
                                        break;
                                    }
                                case "breaking":
                                    {
                                        <div class="badge badge-danger-inverted">@item.Label</div>
                                        break;
                                    }
                                default:
                                    {
                                        @Html.DisplayFor(modelItem => item.Label)
                                        break;
                                    }
                            }
                        </td>
                        <td>
                            <img alt="" src="/img/flags-icons/@{@item.LanguageId}.png" width="30px">
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NONews)
                        </td>
                        <td>
                            <script>
                                document.write(moment('@item.RealTime?.ToString("yyyy-MM-dd HH:mm")').fromNow())
                            </script>
                        </td>
                        <td>
                            @{
                                    switch (item.Status)
                                    {
                                        case Status.Active:
                                            {
                                            <div class="status-pill green" data-title="Active" data-toggle="tooltip"> </div>
                                            break;
                                        }
                                    case Status.InActive:
                                        {
                                            <div class="status-pill red" data-title="InActive" data-toggle="tooltip"></div>
                                            break;
                                        }
                                    case Status.Archive:
                                        {
                                            <div class="status-pill yellow" data-title="Archive" data-toggle="tooltip"></div>
                                            break;
                                        }
                                }
                            }
                        </td>
                        <td class="row-actions">
                            <div>
                                <a class="btn btn-link" onclick=Detail(@item.TopicId) data-bs-toggle="tooltip" data-bs-placement="top" title="Edit">
                                    <i class="os-icon os-icon-ui-49"></i>
                                </a>

                                <a class="danger" onclick=DeleteData(@item.TopicId) data-bs-toggle="tooltip" data-bs-placement="top" title="Delete">
                                    <i class="os-icon os-icon-ui-15"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="table-records-pages">
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                </ul>
            </nav>
        </div>
    </div>
</div>

@*Hiển thị Partial View Xem chi tiết chủ đề*@
<div id="PartialViewTopic"></div>

@await Html.PartialAsync("Create", new TopicCreateRequest())

@section footerscripts{
    <script src="/bower_components/datatables/jquery.dataTables.min.js"></script>
    <script src="/bower_components/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="/bower_components/bootstrap/js/dist/modal.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/31.0.0/classic/ckeditor.js"></script>
    <script src="/js/admin/topic.js"></script>

}

