// <auto-generated />
using System;
using FakeNewsFilter.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FakeNewsFilter.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs", (string)null);

                    b.HasData(
                        new
                        {
                            Key = "Home Title",
                            Value = "This is homepage"
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 702, DateTimeKind.Local).AddTicks(850));

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommentId");

                    b.HasIndex("NewsId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.DetailNews", b =>
                {
                    b.Property<int>("DetailNewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailNewsId"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int?>("ThumbNews")
                        .HasColumnType("int");

                    b.HasKey("DetailNewsId");

                    b.HasIndex("NewsId")
                        .IsUnique();

                    b.HasIndex("ThumbNews")
                        .IsUnique()
                        .HasFilter("[ThumbNews] IS NOT NULL");

                    b.ToTable("DetailNews", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewsId")
                        .HasColumnType("int");

                    b.Property<int?>("Screenshoot")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 703, DateTimeKind.Local).AddTicks(1570));

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeedbackId");

                    b.HasIndex("NewsId");

                    b.HasIndex("Screenshoot")
                        .IsUnique()
                        .HasFilter("[Screenshoot] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Follow", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TopicId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Follow", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.ForgotPassword", b =>
                {
                    b.Property<int>("IdForgotPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdForgotPassword"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdForgotPassword");

                    b.ToTable("ForgotPassword", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "vi",
                            Flag = "vi.png",
                            IsDefault = true,
                            Name = "Tiếng Việt"
                        },
                        new
                        {
                            Id = "en",
                            Flag = "en.png",
                            IsDefault = false,
                            Name = "English"
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaId"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 700, DateTimeKind.Local).AddTicks(6200));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("PathMedia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("MediaId");

                    b.ToTable("Media", (string)null);

                    b.HasData(
                        new
                        {
                            MediaId = 1,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2860),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "covid.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 2,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2860),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "taliban.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 3,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2860),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "kinh-te-tg.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 4,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2860),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "ngvietnamchau.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 5,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2870),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "doanh-nghiep.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 6,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2870),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "chon truong.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 7,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2870),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "congnghegame.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 8,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2870),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "congnghemoi.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 9,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2870),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "phongsu.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 10,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2870),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "giaothong.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 11,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2880),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "chungkhoan.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 12,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2880),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "khoahocvn.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 13,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2880),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "the-thao1.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 14,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2880),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid1.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 15,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2880),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid2.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 16,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2880),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid3.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 17,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2890),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid4.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 18,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2890),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid5.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 19,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2890),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid6.png",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 20,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2890),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid7.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 21,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2890),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid8.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 22,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2890),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "newsid9.jpg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 23,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2900),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "technology.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 24,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2900),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "sports.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 25,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2900),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "health.jpeg",
                            SortOrder = 0,
                            Type = 1
                        },
                        new
                        {
                            MediaId = 26,
                            DateCreated = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2900),
                            Duration = 0,
                            FileSize = 0L,
                            PathMedia = "entertainment.jpeg",
                            SortOrder = 0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"), 1L, 1);

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsVote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("OfficialRating")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SocialBeliefs")
                        .HasColumnType("float");

                    b.Property<int>("SourceCreate")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 698, DateTimeKind.Local).AddTicks(8020));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UrlNews")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("NewsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("News", (string)null);

                    b.HasData(
                        new
                        {
                            NewsId = 1,
                            DatePublished = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Taliban fighters in Kabul, the capital, on Sunday on a Humvee seized from Afghan forces. The speed of the Taliban’s sweep through the country startled American officials. Credit...Jim Huylebroek for The New York Times",
                            ImageLink = "https://travelweekly.co.uk/images/cmstw/original/4/e/6/4/4/easid-453165-media-id-34528.jpg",
                            LanguageId = "en",
                            OfficialRating = 0,
                            Publisher = "New York Times",
                            SocialBeliefs = 0.0,
                            SourceCreate = 1,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2920),
                            Title = "Kabul’s Sudden Fall to Taliban Ends U.S. Era in Afghanistan",
                            UrlNews = "https://www.independent.co.uk/arts-entertainment/eurovision/the-rasmus-eurovision-2022-finland-b2077365.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 2,
                            DatePublished = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The masking orders in Dallas and Bexar counties were issued after a lower court ruled last week in favor of local officials.",
                            ImageLink = "https://media.wltx.com/assets/WLTX/images/cd8afe4e-86f9-487f-b8b4-5e9313da807e/cd8afe4e-86f9-487f-b8b4-5e9313da807e_1140x641.jpg",
                            LanguageId = "en",
                            OfficialRating = 0,
                            Publisher = "NBC News",
                            SocialBeliefs = 0.0,
                            SourceCreate = 1,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2930),
                            Title = "Texas high court blocks mask mandates in two of state's largest counties",
                            UrlNews = "https://www.wltx.com/article/sports/clemson/101-15d947ca-db30-4440-b99a-a1e5a6f4ca35",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 3,
                            DatePublished = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://media.wltx.com/assets/WLTX/images/cd8afe4e-86f9-487f-b8b4-5e9313da807e/cd8afe4e-86f9-487f-b8b4-5e9313da807e_1140x641.jpg",
                            LanguageId = "en",
                            OfficialRating = 2,
                            SocialBeliefs = 0.0,
                            SourceCreate = 1,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2930),
                            Title = "Hospitalizations of Americans under 50 have reached new pandemic highs",
                            UrlNews = "https://www.wltx.com/article/sports/clemson/101-15d947ca-db30-4440-b99a-a1e5a6f4ca35",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 5,
                            DatePublished = new DateTime(2021, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://cdnimg.vietnamplus.vn/t620/uploaded/fsmsy/2021_07_26/phun_khu_khuan.jpg",
                            LanguageId = "vi",
                            OfficialRating = 2,
                            Publisher = "TTXVN/Vietnam",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2940),
                            Title = "Thông tin TP.HCM dùng 5 trực thăng phun khử khuẩn là sai sự thật",
                            UrlNews = "https://www.vietnamplus.vn/thong-tin-tphcm-su-dung-5-truc-thang-phun-khu-trung-la-sai-su-that/729372.vnp",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 6,
                            DatePublished = new DateTime(2021, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://www.baobaclieu.vn/uploads/image/2021/08/06/13b.jpg",
                            LanguageId = "vi",
                            OfficialRating = 1,
                            Publisher = "Báo Bạc Liêu",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2940),
                            Title = "Mạnh tay xử lý hành vi đưa tin giả liên quan đến dịch Covid – 19",
                            UrlNews = "https://www.baobaclieu.vn/quoc-phong-an-ninh/manh-tay-xu-ly-tin-gia-tin-sai-su-that-ve-dich-covid-19-tren-mang-72306.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 7,
                            DatePublished = new DateTime(2022, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://img.nhandan.com.vn/Files/Images/2022/05/12/Hai_truong_hop_lam_viec_voi_co_q-1652343768786.jpg",
                            LanguageId = "vi",
                            OfficialRating = 1,
                            Publisher = "Báo Nhân Dân",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2940),
                            Title = "Thông tin nguồn nước Thánh Thiên chữa được Covid-19 là sai sự thật",
                            UrlNews = "https://nhandan.vn/factcheck/thong-tin-nguon-nuoc-thanh-thien-co-the-chua-covid-19-la-sai-su-that-696816/",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 8,
                            DatePublished = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://file1.dangcongsan.vn/data/0/images/2021/10/01/vulinh/dfhgdfh.jpg?dpi=150&quality=100&w=780",
                            LanguageId = "vi",
                            OfficialRating = 2,
                            Publisher = "DCSVN",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2940),
                            Title = "Bạc Liêu: Mắc Covid-19 được “ưu ái điều trị tại nhà” là sai sự thật",
                            UrlNews = "https://dangcongsan.vn/canh-bao-thong-tin-gia/bac-lieu-mac-covid-19-duoc-uu-ai-dieu-tri-tai-nha-la-sai-su-that-592693.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 9,
                            DatePublished = new DateTime(2021, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://file1.dangcongsan.vn/data/0/images/2021/09/21/vulinh/video-man-1632200081574.jpg?dpi=150&quality=100&w=780",
                            LanguageId = "vi",
                            OfficialRating = 1,
                            Publisher = "DCSVN",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2950),
                            Title = "“Chiến dịch tiêm vaccine ngừa Covid-19 cho trẻ em 12-15 tuổi ở xứ Anh bị tạm dừng” là không chính xác",
                            UrlNews = "https://dangcongsan.vn/canh-bao-thong-tin-gia/chien-dich-tiem-vaccine-ngua-covid-19-cho-tre-em-12-15-tuoi-o-xu-anh-bi-tam-dung-la-khong-chinh-xac-591591.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 10,
                            DatePublished = new DateTime(2021, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/pwivoviu/2021_11_29/1-bai-3-1687.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2950),
                            Title = "Săn 'lộc trời': Lội suối nhặt ốc, vào thủ phủ cá chình",
                            UrlNews = "https://thanhnien.vn/san-loc-troi-loi-suoi-nhat-oc-vao-thu-phu-ca-chinh-post1406363.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 11,
                            DatePublished = new DateTime(2021, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wsxrxqeiod/2021_11_24/nghe-viet-1372.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2950),
                            Title = "Nghề Việt - Nét Việt: Nghề trai Chuôn Ngọ",
                            UrlNews = "https://thanhnien.vn/nghe-viet-net-viet-nghe-trai-chuon-ngo-post1404658.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 12,
                            DatePublished = new DateTime(2021, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wsxrxqeiod/2021_11_24/cao-su-7917.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2950),
                            Title = "Nỗi lòng người cạo mủ cao su",
                            UrlNews = "https://thanhnien.vn/noi-long-nguoi-cao-mu-cao-su-post1404643.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 13,
                            DatePublished = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/fsmxy/2021_11_27/drai-dlong-8588.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2950),
                            Title = "Khám phá thác ba nhánh hùng vĩ ít người biết giữa Tây Nguyên",
                            UrlNews = "https://thanhnien.vn/kham-pha-thac-ba-nhanh-hung-vi-it-nguoi-biet-giua-tay-nguyen-post1405776.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 14,
                            DatePublished = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/fsmxy/2021_11_21/noi-hap-xoi-co-4376.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2960),
                            Title = "Chiếc nồi cổ ‘thần kỳ’ tạo ra món xôi độc đáo của người Nùng ở Đắk Lắk",
                            UrlNews = "https://thanhnien.vn/chiec-noi-co-than-ky-tao-ra-mon-xoi-doc-dao-cua-nguoi-nung-o-dak-lak-post1403687.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 15,
                            DatePublished = new DateTime(2021, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/pwivoviu/2021_11_27/22b1-5885.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2960),
                            Title = "Những đứa con tìm về nguồn cội",
                            UrlNews = "https://thanhnien.vn/nhung-dua-con-tim-ve-nguon-coi-post1405816.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 16,
                            DatePublished = new DateTime(2021, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wsxrxqeiod/2021_11_20/trien-lam-5546.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2960),
                            Title = "Mang chất Việt vào tranh in trên đất Mỹ",
                            UrlNews = "https://thanhnien.vn/mang-chat-viet-vao-tranh-in-tren-dat-my-post1403198.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 17,
                            DatePublished = new DateTime(2021, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/pwivoviu/2021_11_13/22a1-5500.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2960),
                            Title = "Người phụ nữ Việt phát triển vật liệu phủ chống cháy ở Úc",
                            UrlNews = "https://thanhnien.vn/nguoi-phu-nu-viet-phat-trien-vat-lieu-phu-chong-chay-o-uc-post1401084.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 18,
                            DatePublished = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/pwivoviu/2021_11_13/hinh-1-3868.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2970),
                            Title = "Cảm hứng từ bữa ăn Việt của bà",
                            UrlNews = "https://thanhnien.vn/cam-hung-tu-bua-an-viet-cua-ba-post1401081.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 19,
                            DatePublished = new DateTime(2021, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/rfnmf/2021_11_30/tau-metro-2-acxy-8311.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2970),
                            Title = "Gặp bão, đoàn tàu metro trễ hẹn về TP.HCM",
                            UrlNews = "https://thanhnien.vn/gap-bao-doan-tau-metro-tre-hen-ve-tp-hcm-post1406682.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 20,
                            DatePublished = new DateTime(2021, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/vjryqdxwp/2021_11_30/satthep-chihieu-uver-keev-9147.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2970),
                            Title = "Xuất khẩu thép lần đầu cán mốc 10 tỉ USD",
                            UrlNews = "https://thanhnien.vn/xuat-khau-thep-lan-dau-can-moc-10-ti-usd-post1406650.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 21,
                            DatePublished = new DateTime(2021, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/pwivoviu/2021_11_30/2a2-8280.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2970),
                            Title = "TP.HCM khát vốn cho giao thông",
                            UrlNews = "https://thanhnien.vn/tp-hcm-khat-von-cho-giao-thong-post1406453.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 22,
                            DatePublished = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wpxlcqjwq/2021_11_26/kieu-hoi-3276.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2980),
                            Title = "Lượng kiều hối tăng mạnh kỷ lục",
                            UrlNews = "https://thanhnien.vn/luong-kieu-hoi-tang-manh-ky-luc-post1405536.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 23,
                            DatePublished = new DateTime(2021, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wpxlcqjwq/2021_11_24/chung-khoan-9665.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2980),
                            Title = "Dòng vốn mạnh đưa chứng khoán lập đỉnh",
                            UrlNews = "https://thanhnien.vn/dong-von-manh-dua-chung-khoan-lap-dinh-post1404799.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 24,
                            DatePublished = new DateTime(2021, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/bpcgvoiv/2021_11_30/a1-dtan-4946.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2980),
                            Title = "Tin tức giáo dục đặc biệt 1.12: Dạy sử bằng nội dung cảm xúc hay sự kiện?",
                            UrlNews = "https://thanhnien.vn/tin-tuc-giao-duc-dac-biet-1-12-day-su-bang-noi-dung-cam-xuc-hay-su-kien-post1406754.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 25,
                            DatePublished = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wsxrxqeiod/2020_08_31/tuyen-sinh_chbt.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2980),
                            Title = "Hướng vào đại học phù hợp với điểm thi",
                            UrlNews = "https://thanhnien.vn/huong-vao-dai-hoc-phu-hop-voi-diem-thi-post989845.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 26,
                            DatePublished = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wobjuko/2021_11_20/anh-1-7862.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2990),
                            Title = "Gặp người thầy… đẹp trai nhất trường mầm non!",
                            UrlNews = "https://thanhnien.vn/gap-nguoi-thay-dep-trai-nhat-truong-mam-non-post1403127.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 27,
                            DatePublished = new DateTime(2021, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/wobjuko/2021_06_05/3_cdyb.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2990),
                            Title = "Thầy giáo dùng tiền khen thưởng ủng hộ Quỹ phòng chống Covid-19",
                            UrlNews = "https://thanhnien.vn/thay-giao-dung-tien-khen-thuong-ung-ho-quy-phong-chong-covid-19-post1075098.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 28,
                            DatePublished = new DateTime(2021, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/mffsm/2021_09_29/0-1_pldi.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2990),
                            Title = "Khoa Y ĐH Quốc gia TP.HCM xét tuyển bổ sung cả thí sinh tự do",
                            UrlNews = "https://thanhnien.vn/khoa-y-dh-quoc-gia-tp-hcm-xet-tuyen-bo-sung-ca-thi-sinh-tu-do-post1116655.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 29,
                            DatePublished = new DateTime(2021, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/xdrkxrvekx/2021_11_30/cyberpunk-4917.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2990),
                            Title = "Bản nâng cấp Cyberpunk 2077 sẽ miễn phí cho chủ sở hữu PS4 và Xbox One",
                            UrlNews = "https://thanhnien.vn/ban-nang-cap-cyberpunk-2077-se-mien-phi-cho-chu-so-huu-ps4-va-xbox-one-post1406595.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 30,
                            DatePublished = new DateTime(2021, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/dbeyxqxqrs/2021_11_30/1-8294.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2990),
                            Title = "Phi Vụ Triệu Đô tái kết hợp Free Fire trong phần đặc biệt: Phi Vụ Cuối Cùng tháng 12 này",
                            UrlNews = "https://thanhnien.vn/phi-vu-trieu-do-tai-ket-hop-free-fire-trong-phan-dac-biet-phi-vu-cuoi-cung-thang-12-nay-post1406503.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 31,
                            DatePublished = new DateTime(2021, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/xdrkxrvekx/2021_11_23/image0-500.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(3000),
                            Title = "Việt Nam lọt Top 5 đội LMHT: Tốc Chiến thế giới",
                            UrlNews = "https://thanhnien.vn/viet-nam-lot-top-5-doi-lmht-toc-chien-the-gioi-post1404103.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 32,
                            DatePublished = new DateTime(2021, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/xdrkxrvekx/2021_11_22/1-3692.jpg",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(3000),
                            Title = "Riot Games để lộ 4 địa điểm của Chung kết LMHT Thế giới 2022",
                            UrlNews = "https://thanhnien.vn/riot-games-de-lo-4-dia-diem-cua-chung-ket-lmht-the-gioi-2022-post1403726.html",
                            ViewCount = 0
                        },
                        new
                        {
                            NewsId = 33,
                            DatePublished = new DateTime(2021, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageLink = "https://image.thanhnien.vn/w2048/Uploaded/2022/xdrkxrvekx/2021_11_15/picture2-6769.png",
                            LanguageId = "vi",
                            OfficialRating = 0,
                            Publisher = "Báo Thanh Niên",
                            SocialBeliefs = 0.0,
                            SourceCreate = 2,
                            Status = 0,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(3000),
                            Title = "Arcane giúp Vi và Jinx tăng vọt tỉ lệ được chọn trong LMHT",
                            UrlNews = "https://thanhnien.vn/arcane-giup-vi-va-jinx-tang-vot-ti-le-duoc-chon-trong-lmht-post1401689.html",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.NewsCommunity", b =>
                {
                    b.Property<int>("NewsCommunityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsCommunityId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 702, DateTimeKind.Local).AddTicks(1710));

                    b.Property<bool>("IsPopular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("ThumbNews")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NewsCommunityId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ThumbNews")
                        .IsUnique()
                        .HasFilter("[ThumbNews] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("NewsCommunity", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.NewsInTopics", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 699, DateTimeKind.Local).AddTicks(4800));

                    b.HasKey("TopicId", "NewsId");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsInTopics", (string)null);

                    b.HasData(
                        new
                        {
                            TopicId = 2,
                            NewsId = 3,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 2,
                            NewsId = 2,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 1,
                            NewsId = 1,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 2,
                            NewsId = 1,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 8,
                            NewsId = 5,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 8,
                            NewsId = 6,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 8,
                            NewsId = 7,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 8,
                            NewsId = 9,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 9,
                            NewsId = 10,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 9,
                            NewsId = 11,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 9,
                            NewsId = 12,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 9,
                            NewsId = 13,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 9,
                            NewsId = 14,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 10,
                            NewsId = 15,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 10,
                            NewsId = 16,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 10,
                            NewsId = 17,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 10,
                            NewsId = 18,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 11,
                            NewsId = 19,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 11,
                            NewsId = 20,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 11,
                            NewsId = 21,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 11,
                            NewsId = 22,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 11,
                            NewsId = 23,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 12,
                            NewsId = 24,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 12,
                            NewsId = 25,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 12,
                            NewsId = 26,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 12,
                            NewsId = 27,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 12,
                            NewsId = 28,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 12,
                            NewsId = 29,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 13,
                            NewsId = 30,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 13,
                            NewsId = 31,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 13,
                            NewsId = 32,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TopicId = 13,
                            NewsId = 33,
                            Timestamp = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.RefreshToken", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenId"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TokenId");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3314be5-4c77-4fb6-82ad-302014682a73"),
                            ConcurrencyStamp = "fa7335a3-b8fe-4a70-b150-6da5138dd22b",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("b4314be5-4c77-4fb6-82ad-302014682b13"),
                            ConcurrencyStamp = "5c5fa2be-33c7-4a86-abc7-2cb7ce661a98",
                            Name = "Subscriber",
                            NormalizedName = "Subscriber"
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceId"), 1L, 1);

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("SourceId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Source", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoryId"), 1L, 1);

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("Thumbstory")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 701, DateTimeKind.Local).AddTicks(5580));

                    b.HasKey("StoryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SourceId");

                    b.HasIndex("Thumbstory")
                        .IsUnique()
                        .HasFilter("[Thumbstory] IS NOT NULL");

                    b.ToTable("Story", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.TopicNews", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("normal");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("ThumbTopic")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 698, DateTimeKind.Local).AddTicks(1040));

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TopicId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ThumbTopic")
                        .IsUnique()
                        .HasFilter("[ThumbTopic] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("TopicNews", (string)null);

                    b.HasData(
                        new
                        {
                            TopicId = 1,
                            Description = "Follow live as the Taliban seizes territory across Afghanistan in the wake of the U.S. withdrawal.",
                            Label = "breaking",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "afghanistan",
                            ThumbTopic = 3,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2800)
                        },
                        new
                        {
                            TopicId = 2,
                            Description = "Best nonfiction features, in-depth stores and other long-form content from across the web.",
                            Label = "featured",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "in-depth",
                            ThumbTopic = 2,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2800)
                        },
                        new
                        {
                            TopicId = 3,
                            Description = "Outbreak of respiratory virus that has killed over 1 million and infected 100 milion worldwide.",
                            Label = "featured",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "coronavirus",
                            ThumbTopic = 1,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2800)
                        },
                        new
                        {
                            TopicId = 4,
                            Description = "The top business and economic news from around the world with a focus on the United State.",
                            Label = "featured",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "top-business",
                            ThumbTopic = 1,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2810)
                        },
                        new
                        {
                            TopicId = 5,
                            Description = "Follow the presidential transition of Joe Biden, including policy plans, appointments and more.",
                            Label = "featured",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "biden-admin",
                            ThumbTopic = 1,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2810)
                        },
                        new
                        {
                            TopicId = 6,
                            Description = "Top stories from around the world with a focus on news not covered in other feeds.",
                            Label = "featured",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "top-news",
                            ThumbTopic = 1,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2810)
                        },
                        new
                        {
                            TopicId = 7,
                            Description = "Follow important local news: politics, business, top events and more. Updated everything evening.",
                            Label = "featured",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "boston",
                            ThumbTopic = 1,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2810)
                        },
                        new
                        {
                            TopicId = 8,
                            Description = "Các thông tin về virut corona.",
                            Label = "breaking",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "dịch bệnh",
                            ThumbTopic = 3,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2810)
                        },
                        new
                        {
                            TopicId = 9,
                            Description = "Cuộc sống của người Việt Trên toàn thế giới.",
                            Label = "normal",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "người Việt Nam",
                            ThumbTopic = 4,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2820)
                        },
                        new
                        {
                            TopicId = 10,
                            Description = " Nền doanh nghiệp Việt Nam.",
                            Label = "normal",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "Kinh tế",
                            ThumbTopic = 5,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2820)
                        },
                        new
                        {
                            TopicId = 11,
                            Description = "Chọn trường nghề phù hợp với bản thân.",
                            Label = "normal",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "học hành",
                            ThumbTopic = 6,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2820)
                        },
                        new
                        {
                            TopicId = 12,
                            Description = "Công nghệ mới trong game.",
                            Label = "normal",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "Trò chơi",
                            ThumbTopic = 7,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2830)
                        },
                        new
                        {
                            TopicId = 13,
                            Description = " Sản phẩm công nghệ mới trong năm.",
                            Label = "featured",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "Sản phẩm",
                            ThumbTopic = 8,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2830)
                        },
                        new
                        {
                            TopicId = 14,
                            Description = " Phóng sự đời sống thường nhật của người dân.",
                            Label = "normal",
                            LanguageId = "vi",
                            Status = 0,
                            Tag = "Phóng sự",
                            ThumbTopic = 9,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2830)
                        },
                        new
                        {
                            TopicId = 15,
                            Description = "View the latest technology headlines, gadget and smartphone trends, and insights from tech industry leaders.",
                            Label = "normal",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "Technology",
                            ThumbTopic = 23,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2830)
                        },
                        new
                        {
                            TopicId = 16,
                            Description = "News, results and comments on sport tournaments in worldwide. Football, martial arts, chess, tennis, esport and others.",
                            Label = "normal",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "Sports",
                            ThumbTopic = 24,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2830)
                        },
                        new
                        {
                            TopicId = 17,
                            Description = "View the latest health news and explore articles on fitness, diet, nutrition, parenting, relationships, medicine, diseases and healthy living.",
                            Label = "normal",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "Health",
                            ThumbTopic = 25,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2840)
                        },
                        new
                        {
                            TopicId = 18,
                            Description = "View entertainment news and videos for the latest movie, music, TV and celebrity headlines.",
                            Label = "normal",
                            LanguageId = "en",
                            Status = 0,
                            Tag = "Entertainment",
                            ThumbTopic = 26,
                            Timestamp = new DateTime(2022, 11, 11, 15, 35, 30, 712, DateTimeKind.Local).AddTicks(2840)
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AvatarId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId")
                        .IsUnique()
                        .HasFilter("[AvatarId] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69db714f-9576-45ba-b5b7-f00649be01de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "73572192-be40-49c4-92d9-c872e052ab71",
                            Email = "bp.khuyen@hutech.edu.vn",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Bui Phu Khuyen",
                            NormalizedEmail = "BP.KHUYEN@HUTECH.EDU.VN",
                            NormalizedUserName = "khuyenpb",
                            PasswordHash = "AQAAAAEAACcQAAAAEBjLcxWLceZ/pG272JK6z9OW5WTJUxF6G0HsFUSlvdJJeWUnyxtJL/4dREsQTRyUHg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = 0,
                            TwoFactorEnabled = false,
                            UserName = "khuyenpb"
                        },
                        new
                        {
                            Id = new Guid("69db714f-9576-45ba-b5b7-f00649be02de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "03226b6d-9dda-4a26-a64a-066831000bcd",
                            Email = "thanh26092000@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Le Xuan Thanh",
                            NormalizedEmail = "THANH26092000@GMAIL.COM",
                            NormalizedUserName = "LXThanh",
                            PasswordHash = "AQAAAAEAACcQAAAAEIA24bFegKjqN9VQJlQfCg2sDZkpudAyx3/YVdi7A1ShvJOeck5zVlPx4oDpQw0bMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = 0,
                            TwoFactorEnabled = false,
                            UserName = "LXThanh"
                        },
                        new
                        {
                            Id = new Guid("69db714f-9576-45ba-b5b7-f00649be03de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34d70d3d-d4cc-4d4f-abd9-67dd70351eae",
                            Email = "khanh200111@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Huynh Huu Khanh",
                            NormalizedEmail = "KHANH200111@GMAIL.COM",
                            NormalizedUserName = "hkhansh27",
                            PasswordHash = "AQAAAAEAACcQAAAAEB7v+xau9xPtS1fq1UDNoum9oAqQpf/HKFTEfd46otwMgfK+DAUPcqTrbilWPmNY6w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = 0,
                            TwoFactorEnabled = false,
                            UserName = "hkhansh27"
                        },
                        new
                        {
                            Id = new Guid("69db714f-9576-45ba-b5b7-f00649be04de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e8e9c625-debd-4b7a-b9a8-17ad891eb42d",
                            Email = "hi@phucs.me",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "To Hoang Phuc",
                            NormalizedEmail = "HI@PHUCS.ME",
                            NormalizedUserName = "HoangPhuc",
                            PasswordHash = "AQAAAAEAACcQAAAAELR5tJCLIUyYPo8Z43iqaGAZXKTzBWjgKFIryKFWUGa97Cd+nAwXkvBy1CDj5wPb2Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = 0,
                            TwoFactorEnabled = false,
                            UserName = "HoangPhuc"
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.UserRoles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69db714f-9576-45ba-b5b7-f00649be01de"),
                            RoleId = new Guid("a3314be5-4c77-4fb6-82ad-302014682a73")
                        },
                        new
                        {
                            UserId = new Guid("69db714f-9576-45ba-b5b7-f00649be02de"),
                            RoleId = new Guid("a3314be5-4c77-4fb6-82ad-302014682a73")
                        },
                        new
                        {
                            UserId = new Guid("69db714f-9576-45ba-b5b7-f00649be03de"),
                            RoleId = new Guid("a3314be5-4c77-4fb6-82ad-302014682a73")
                        },
                        new
                        {
                            UserId = new Guid("69db714f-9576-45ba-b5b7-f00649be04de"),
                            RoleId = new Guid("a3314be5-4c77-4fb6-82ad-302014682a73")
                        });
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Version", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VersionId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 702, DateTimeKind.Local).AddTicks(9630));

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VersionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRequired")
                        .HasColumnType("bit");

                    b.HasKey("VersionId");

                    b.ToTable("Version", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Vote", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 11, 15, 35, 30, 700, DateTimeKind.Local).AddTicks(9300));

                    b.Property<bool>("isReal")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "NewsId");

                    b.HasIndex("NewsId");

                    b.ToTable("Vote", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey", "UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Comment", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.News", "News")
                        .WithMany("Comment")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.Comment", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("FakeNewsFilter.Data.Entities.User", "User")
                        .WithMany("Comment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.DetailNews", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.News", "News")
                        .WithOne("DetailNews")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.DetailNews", "NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.Media", "Media")
                        .WithOne("DetailNews")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.DetailNews", "ThumbNews");

                    b.Navigation("Media");

                    b.Navigation("News");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Feedback", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId");

                    b.HasOne("FakeNewsFilter.Data.Entities.Media", "Media")
                        .WithOne("MediaFeedback")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.Feedback", "Screenshoot");

                    b.HasOne("FakeNewsFilter.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Media");

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Follow", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.TopicNews", "TopicNews")
                        .WithMany("Follows")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.User", "User")
                        .WithMany("Follows")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TopicNews");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.News", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Language", "Language")
                        .WithMany("News")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.NewsCommunity", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Language", "Language")
                        .WithMany("newsCommunities")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.Media", "Media")
                        .WithOne("NewsCommunity")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.NewsCommunity", "ThumbNews");

                    b.HasOne("FakeNewsFilter.Data.Entities.User", "Publisher")
                        .WithMany("NewsCommunity")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Media");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.NewsInTopics", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.News", "News")
                        .WithMany("NewsInTopics")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.TopicNews", "TopicNews")
                        .WithMany("NewsInTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("TopicNews");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Source", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Language", "Language")
                        .WithMany("Source")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Story", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Language", "Language")
                        .WithMany("Story")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.Source", "Source")
                        .WithMany("Story")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.Media", "Media")
                        .WithOne("Story")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.Story", "Thumbstory");

                    b.Navigation("Language");

                    b.Navigation("Media");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.TopicNews", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Language", "Language")
                        .WithMany("TopicNews")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.Media", "Media")
                        .WithOne("TopicNews")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.TopicNews", "ThumbTopic");

                    b.HasOne("FakeNewsFilter.Data.Entities.User", null)
                        .WithMany("TopicId")
                        .HasForeignKey("UserId");

                    b.Navigation("Language");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.User", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Media", "Avatar")
                        .WithOne("User")
                        .HasForeignKey("FakeNewsFilter.Data.Entities.User", "AvatarId");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.UserRoles", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Vote", b =>
                {
                    b.HasOne("FakeNewsFilter.Data.Entities.News", "News")
                        .WithMany("Vote")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FakeNewsFilter.Data.Entities.User", "User")
                        .WithMany("Vote")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Language", b =>
                {
                    b.Navigation("News");

                    b.Navigation("Source");

                    b.Navigation("Story");

                    b.Navigation("TopicNews");

                    b.Navigation("newsCommunities");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Media", b =>
                {
                    b.Navigation("DetailNews");

                    b.Navigation("MediaFeedback");

                    b.Navigation("NewsCommunity");

                    b.Navigation("Story");

                    b.Navigation("TopicNews");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.News", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("DetailNews");

                    b.Navigation("NewsInTopics");

                    b.Navigation("Vote");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.Source", b =>
                {
                    b.Navigation("Story");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.TopicNews", b =>
                {
                    b.Navigation("Follows");

                    b.Navigation("NewsInTopics");
                });

            modelBuilder.Entity("FakeNewsFilter.Data.Entities.User", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("Follows");

                    b.Navigation("NewsCommunity");

                    b.Navigation("RefreshTokens");

                    b.Navigation("TopicId");

                    b.Navigation("UserRoles");

                    b.Navigation("Vote");
                });
#pragma warning restore 612, 618
        }
    }
}
